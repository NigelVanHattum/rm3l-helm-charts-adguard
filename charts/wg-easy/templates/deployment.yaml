apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wg-easy.fullname" . }}
  labels:
    {{- include "wg-easy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "wg-easy.selectorLabels" . | nindent 6 }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "wg-easy.selectorLabels" . | nindent 8 }}
    spec:
      priorityClassName: {{ .Values.priorityClassName }}
      hostNetwork: {{ .Values.hostNetwork }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "wg-easy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: WG_PORT
              value: "{{ .Values.services.wireguard.port }}"
            - name: WG_HOST
            {{- if .Values.ingress.enabled }}
            {{- with (first .Values.ingress.hosts) }}
              value: {{ .host }}
            {{- end }}
            {{- else }}
              value: wg-easy.local
            {{- end }}
            {{- with .Values.extraEnvVars.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.extraEnvVars.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: wg
              containerPort: {{ .Values.services.wireguard.port }}
              protocol: UDP
            - name: http
              containerPort: {{ .Values.services.http.port }}
              protocol: TCP
          # Use the http server for pod health checks
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 30
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          # Persistent storage location
          volumeMounts:
            - name: lib-volume
              mountPath: /lib/modules
            - mountPath: /etc/wireguard
              name: {{ include "wg-easy.fullname" . }}-config
      volumes:
        - name: lib-volume
          hostPath:
            path: /lib/modules
        - name: {{ include "wg-easy.fullname" . }}-config
          persistentVolumeClaim:
            {{- if .Values.persistence.existingClaim }}
            claimName: {{ .Values.persistence.existingClaim }}
            {{- else }}
            claimName: {{ include "wg-easy.fullname" . }}-config
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
